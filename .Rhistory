t1 <- sample(paste("Hosp", letters), size = 100, replace=TRUE)
t2 <- sample(x = c("Male", "Female")   , size = 100, replace=TRUE)
t3 <- floor(runif(100, min = 0, max = 110))
t4 <- sample(x = c("Survived", "Died") , size = 100, replace=TRUE)
t5  <- sample(paste("Facility ", letters), size = 100, replace=TRUE)
View(t1)
d <- data.frame(cbind(t1,t2,t3,t4,t5))
names(d) <- c('Hospital', 'Gender', 'AgeYears', 'Outcome', 'Dischargeto')
d$AgeYears <- as.integer(d$AgeYears)
d$AgeGroup <- cut(d$AgeYears,
breaks = c(-Inf
,5 ,10 ,15,20,25,30,35,40,45,50,55,60 ,65,70,75,80,85
, Inf),
labels = c("0-4 years"
,"5-9 years","10-14 years","15-19 years","20-24 years"
,"25-29 years","30-34 years","35-39 years","40-44 years"
,"45-49 years","50-54 years","55-59 years","60-64 years"
,"65-69 years","70-74 years","75-79 years","80-84 years"
,"85+ years"),
right = FALSE)
d
library(dplyr)
library(tidyverse)
library(tidyr)
library(ggplot2)
library(metan)
library(ggraph)
# Step 1
df <- d %>%
make_long(Hospital, Gender, AgeYears, Outcome, Discharget)
# Step 2
dagg <- d%>%
dplyr::group_by(node)%>%
tally()
d %>% make_long(Hospital, Gender, AgeYears, Outcome, Discharget)
d %>% make_long(Hospital)
library(dplyr)
library(ggplot2)
library(ggalluvial)
library(networkD3)
install.packages("ggalluvial")
installed.packages("networkD3")
install.packages("networkD3")
library(dplyr)
library(ggplot2)
library(ggalluvial)
library(networkD3)
# 1. Create a Random Dataset for Sankey Plot
set.seed(123)  # For reproducibility
n <- 100  # Number of observations
data <- data.frame(
Hospital = sample(c("A", "B", "C"), n, replace = TRUE),
Gender = sample(c("Male", "Female"), n, replace = TRUE),
AgeGroup = sample(c("Young", "Adult", "Elderly"), n, replace = TRUE),
Outcome = sample(c("Recovered", "Deceased"), n, replace = TRUE),
Dischargeto = sample(c("Home", "Rehab", "Other"), n, replace = TRUE)
)
View(data)
# 2. Sankey Diagram using networkD3 (Interactive)
# Prepare Data for Sankey
library(tidyr)
long_data <- data %>%
pivot_longer(cols = everything(), names_to = "Stage", values_to = "Value")
View(long_data)
nodes <- data.frame(name = unique(long_data$Value))
links <- long_data %>%
group_by(Stage, Value) %>%
summarise(count = n(), .groups = 'drop') %>%
mutate(
source = match(Value, nodes$name) - 1,
target = match(lead(Value, default = NA), nodes$name) - 1
) %>%
na.omit()
sankey_plot <- sankeyNetwork(Links = links, Nodes = nodes,
Source = "source", Target = "target", Value = "count",
NodeID = "name", fontSize = 14, nodeWidth = 30)
# Show the Sankey Plot
sankey_plot
# 3. Fancy Static Sankey Plot using ggalluvial
ggplot(data = data, aes(axis1 = Hospital, axis2 = Gender, axis3 = AgeGroup, axis4 = Outcome, axis5 = Dischargeto)) +
geom_alluvium(aes(fill = Outcome), width = 1/12) +
geom_stratum(aes(fill = Hospital), width = 1/12, color = "black") +
geom_text(stat = "stratum", aes(label = after_stat(stratum)), size = 5) +
scale_fill_brewer(type = "qual", palette = "Set2") +
theme_minimal() +
ggtitle("Fancy Sankey Plot of Hospital Patient Flow") +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"))
links <- long_data %>%
group_by(Stage, Value) %>%
summarise(count = n(), .groups = 'drop') %>%
mutate(
source = match(Value, nodes$name) - 1,
target = match(lead(Value, default = NA), nodes$name) - 1
) %>%
na.omit()
sankey_plot <- sankeyNetwork(Links = links, Nodes = nodes,
Source = "source", Target = "target", Value = "count",
NodeID = "name", fontSize = 14, nodeWidth = 30)
# Show the Sankey Plot
sankey_plot
ggplot(data = data, aes(axis1 = Hospital, axis2 = Gender, axis3 = AgeGroup, axis4 = Outcome, axis5 = Dischargeto)) +
geom_alluvium(aes(fill = Outcome), width = 1/12)
ggplot(data = data, aes(axis1 = Hospital, axis2 = Gender, axis3 = AgeGroup, axis4 = Outcome, axis5 = Dischargeto)) +
geom_alluvium(aes(fill = Outcome), width = 1/12) +
geom_stratum(aes(fill = Hospital), width = 1/12, color = "black")
ggplot(data = data, aes(axis1 = Hospital, axis2 = Gender, axis3 = AgeGroup, axis4 = Outcome, axis5 = Dischargeto)) +
geom_alluvium(aes(fill = Outcome), width = 1/12) +
geom_stratum(aes(fill = Hospital), width = 1/12, color = "black") +
geom_text(stat = "stratum", aes(label = after_stat(stratum)), size = 5)
links <- long_data %>%
group_by(Stage, Value) %>%
summarise(count = n(), .groups = 'drop') %>%
mutate(
source = match(Value, nodes$name) - 1,
ggplot(data = data, aes(axis1 = Hospital, axis2 = Gender, axis3 = AgeGroup, axis4 = Outcome, axis5 = Dischargeto)) +
geom_alluvium(aes(fill = Outcome), width = 1/12) +
geom_stratum(aes(fill = Hospital), width = 1/12, color = "black") +
geom_text(stat = "stratum", aes(label = after_stat(stratum)), size = 5) +
scale_fill_brewer(type = "qual", palette = "Set2")
# 3. Fancy Static Sankey Plot using ggalluvial
ggplot(data = data, aes(axis1 = Hospital, axis2 = Gender, axis3 = AgeGroup, axis4 = Outcome, axis5 = Dischargeto)) +
ggplot(data = data, aes(axis1 = Hospital, axis2 = Gender, axis3 = AgeGroup, axis4 = Outcome, axis5 = Dischargeto)) +
geom_alluvium(aes(fill = Outcome), width = 1/12) +
geom_stratum(aes(fill = Hospital), width = 1/12, color = "black") +
geom_text(stat = "stratum", aes(label = after_stat(stratum)), size = 5) +
scale_fill_brewer(type = "qual", palette = "plasma")
# 3. Fancy Static Sankey Plot using ggalluvial
ggplot(data = data, aes(axis1 = Hospital, axis2 = Gender, axis3 = AgeGroup, axis4 = Outcome, axis5 = Dischargeto)) +
geom_alluvium(aes(fill = Outcome), width = 1/12) +
geom_stratum(aes(fill = Hospital), width = 1/12, color = "black") +
geom_text(stat = "stratum", aes(label = after_stat(stratum)), size = 5) +
scale_fill_brewer(type = "qual", palette = "set2") +
theme_minimal() +
ggtitle("Fancy Sankey Plot of Hospital Patient Flow") +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"))
ggplot(data = data, aes(axis1 = Hospital, axis2 = Gender, axis3 = AgeGroup, axis4 = Outcome, axis5 = Dischargeto)) +
geom_alluvium(aes(fill = Outcome), width = 1/12) +
geom_stratum(aes(fill = Hospital), width = 1/12, color = "black") +
geom_text(stat = "stratum", aes(label = after_stat(stratum)), size = 5) +
scale_fill_brewer(type = "qual", palette = "Set2")
# 3. Fancy Static Sankey Plot using ggalluvial
ggplot(data = data, aes(axis1 = Hospital, axis2 = Gender, axis3 = AgeGroup, axis4 = Outcome, axis5 = Dischargeto)) +
geom_alluvium(aes(fill = Outcome), width = 1/12) +
geom_stratum(aes(fill = Hospital), width = 1/12, color = "black") +
geom_text(stat = "stratum", aes(label = after_stat(stratum)), size = 5) +
scale_fill_brewer(type = "qual", palette = "Set2") +
theme_abyss() +
ggtitle("Fancy Sankey Plot of Hospital Patient Flow") +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"))
# 3. Fancy Static Sankey Plot using ggalluvial
ggplot(data = data, aes(axis1 = Hospital, axis2 = Gender, axis3 = AgeGroup, axis4 = Outcome, axis5 = Dischargeto)) +
geom_alluvium(aes(fill = Outcome), width = 1/12) +
geom_stratum(aes(fill = Hospital), width = 1/12, color = "black") +
geom_text(stat = "stratum", aes(label = after_stat(stratum)), size = 5) +
scale_fill_brewer(type = "qual", palette = "Set2") +
theme_void() +
ggtitle("Fancy Sankey Plot of Hospital Patient Flow") +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"))
library(dplyr)
library(ggplot2)
library(ggalluvial)
library(networkD3)
# 1. Create a Random Dataset for Sankey Plot
set.seed(123)  # For reproducibility
n <- 100  # Number of observations
data <- data.frame(
Hospital = sample(c("A", "B", "C"), n, replace = TRUE),
Gender = sample(c("Male", "Female"), n, replace = TRUE),
AgeGroup = sample(c("Young", "Adult", "Elderly"), n, replace = TRUE),
Outcome = sample(c("Recovered", "Deceased"), n, replace = TRUE),
Dischargeto = sample(c("Home", "Rehab", "Other"), n, replace = TRUE)
)
# 2. Sankey Diagram using networkD3 (Interactive)
# Prepare Data for Sankey
library(tidyr)
long_data <- data %>%
pivot_longer(cols = everything(), names_to = "Stage", values_to = "Value")
nodes <- data.frame(name = unique(long_data$Value))
links <- long_data %>%
group_by(Stage, Value) %>%
summarise(count = n(), .groups = 'drop') %>%
mutate(
source = match(Value, nodes$name) - 1,
target = match(lead(Value, default = NA), nodes$name) - 1
) %>%
na.omit()
sankey_plot <- sankeyNetwork(Links = links, Nodes = nodes,
Source = "source", Target = "target", Value = "count",
NodeID = "name", fontSize = 14, nodeWidth = 30)
# Show the Sankey Plot
sankey_plot
# 3. Fancy Static Sankey Plot using ggalluvial
ggplot(data = data, aes(axis1 = Hospital, axis2 = Gender, axis3 = AgeGroup, axis4 = Outcome, axis5 = Dischargeto)) +
geom_alluvium(aes(fill = Outcome), width = 1/12) +
geom_stratum(aes(fill = Hospital), width = 1/12, color = "black") +
geom_text(stat = "stratum", aes(label = after_stat(stratum)), size = 5) +
scale_fill_brewer(type = "qual", palette = "Set2") +
theme_void() +
ggtitle("Fancy Sankey Plot of Hospital Patient Flow") +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"))
# 3. Fancy Static Sankey Plot using ggalluvial
ggplot(data = data, aes(axis1 = Hospital, axis2 = Gender, axis3 = AgeGroup, axis4 = Outcome, axis5 = Dischargeto)) +
geom_alluvium(aes(fill = Outcome), width = 1/12) +
geom_stratum(aes(fill = Hospital), width = 1/12, color = "black") +
geom_text(stat = "stratum", aes(label = after_stat(stratum)), size = 5) +
scale_fill_brewer(type = "qual", palette = "Set2") +
theme_void() +
ggtitle("Zafs_sankey_Linkedin") +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"))
